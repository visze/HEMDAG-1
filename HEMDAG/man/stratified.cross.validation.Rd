% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HEMDAG.1.0.0.R
\name{stratified.cross.validation}
\alias{stratified.cross.validation}
\alias{do.stratified.cv.data.single.class}
\alias{do.stratified.cv.data.over.classes}
\title{Stratified cross validation}
\usage{
do.stratified.cv.data.single.class(examples, positives, kk = 5, seed = NULL)

do.stratified.cv.data.over.classes(labels, examples, kk = 5, seed = NULL)
}
\arguments{
\item{examples}{indices or names of the examples. Can be either a vector of integers or a vector of names.}

\item{positives}{vector of integers or vector of names. The indices (or names) refer to the indices (or names) of 'positive' examples}

\item{kk}{number of folds (\code{def=5})}

\item{seed}{seed of the random generator (\code{def=NULL}). If is set to \code{NULL} no initialization is performed}

\item{labels}{labels matrix. Rows are genes and columns are classes. Let's denote \eqn{M} the labels matrix. 
If \eqn{M[i,j]=1}, means that the gene \eqn{i} is annotated with the class \eqn{j}, otherwise \eqn{M[i,j]=0}.}
}
\value{
\code{do.stratified.cv.data.single.class} returns a list with 2 two component:
\itemize{
 \item fold.non.positives: a list with \eqn{k} components. Each component is a vector with the indices (or names) of the non-positive elements. 
	Indices (or names) refer to row numbers (or names) of a data matrix.
 \item fold.positives: a list with \eqn{k} components. Each component is a vector with the indices (or names) of the positive elements. 
	Indices (or names) refer to row numbers (or names) of a data matrix.	 
}

\code{do.stratified.cv.data.over.classes} returns a list with \eqn{n} components, where \eqn{n} is the number of classes of the labels matrix. 
Each component \eqn{n} is in turn a list with \eqn{k} elements, where \eqn{k} is the number of folds. 
Each fold contains an equal amount of examples positives and negatives.
}
\description{
Generate data for the stratified cross-validation
}
\examples{
data(labels);
examples.index <- 1:nrow(L);
examples.name <- rownames(L);
positives <- which(L[,3]==1);
x <- do.stratified.cv.data.single.class(examples.index, positives, kk=5, seed=23);
y <- do.stratified.cv.data.single.class(examples.name, positives, kk=5, seed=23);
z <- do.stratified.cv.data.over.classes(L, examples.index, kk=5, seed=23);
k <- do.stratified.cv.data.over.classes(L, examples.name, kk=5, seed=23);
}
