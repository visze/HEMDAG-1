% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heuristic.methods.R
\name{Do.heuristic.methods.holdout}
\alias{Do.heuristic.methods.holdout}
\title{Do Heuristic Methods holdout}
\usage{
Do.heuristic.methods.holdout(heuristic.fun = "AND", norm = TRUE,
  norm.type = NULL, folds = 5, seed = 23, n.round = 3,
  f.criterion = "F", rec.levels = seq(from = 0.1, to = 1, by = 0.1),
  flat.file = flat.file, ann.file = ann.file, dag.file = dag.file,
  ind.test.set = ind.test.set, ind.dir = ind.dir, flat.dir = flat.dir,
  ann.dir = ann.dir, dag.dir = dag.dir, hierScore.dir = hierScore.dir,
  perf.dir = perf.dir)
}
\arguments{
\item{heuristic.fun}{can be one of the following three values:
\enumerate{
    \item "MAX": run the heuristic method MAX;
    \item "AND": run the heuristic method AND;
    \item "OR": run the heuristic method OR;
}}

\item{norm}{boolean value: 
\itemize{
\item \code{TRUE} (def.): the flat scores matrix has been already normalized in according to a normalization method;    
\item \code{FALSE}: the flat scores matrix has not been normalized yet. See the parameter \code{norm} for which normalization can be applied.
}}

\item{norm.type}{can be one of the following three values:
\enumerate{
\item \code{NONE} (def.): set \code{norm.type} to \code{NONE} if and only if the parameter \code{norm} is set to \code{TRUE};
\item \code{MaxNorm}: each score is divided for the maximum of each class;
\item \code{Qnorm}: quantile normalization. \pkg{preprocessCore} package is used. 
}}

\item{folds}{number of folds of the cross validation on which computing the performance metrics averaged across folds (\code{def. 5}).
If \code{folds=NULL}, the performance metrics are computed one-shot, otherwise the performance metrics are averaged across folds.}

\item{seed}{initialization seed for the random generator to create folds (\code{def. 23}). If \code{NULL} folds are generated without seed 
initialization.}

\item{n.round}{number of rounding digits to be applied to the hierarchical scores matrix (\code{def. 3}). It is used for choosing 
the best threshold on the basis of the best F-measure}

\item{f.criterion}{character. Type of F-measure to be used to select the best F-measure. Two possibilities:
\enumerate{
\item \code{F} (def.): corresponds to the harmonic mean between the average precision and recall
\item \code{avF}: corresponds to the per-example \code{F-score} averaged across all the examples
}}

\item{rec.levels}{a vector with the desired recall levels (\code{def:} \code{from:0.1}, \code{to:0.9}, \code{by:0.1}) to compute the 
the Precision at fixed Recall level (PXR)}

\item{flat.file}{name of the file containing the flat scores matrix to be normalized or already normalized (without rda extension)}

\item{ann.file}{name of the file containing the the label matrix of the examples (without rda extension)}

\item{dag.file}{name of the file containing the graph that represents the hierarchy of the classes (without rda extension)}

\item{ind.test.set}{name of the file containing a vector of integer numbers corresponding to the indices of the elements (rows) of scores 
matrix to be used in the    test set}

\item{ind.dir}{relative path to folder where \code{ind.test.set} is stored}

\item{flat.dir}{relative path where flat scores matrix is stored}

\item{ann.dir}{relative path where annotation matrix is stored}

\item{dag.dir}{relative path where graph is stored}

\item{hierScore.dir}{relative path where the hierarchical scores matrix must be stored}

\item{perf.dir}{relative path where the term-centric and protein-centric measures must be stored}
}
\value{
Two \code{rda} files stored in the respective output directories:
\enumerate{
	\item \code{Hierarchical Scores Results}: a matrix with examples on rows and classes on columns representing the computed hierarchical scores 
	for each example and for each considered class. It is stored in the \code{hierScore.dir} directory.
	\item \code{Performance Measures}: \emph{flat} and \emph{hierarchical} performace results:
	\enumerate{
		\item AUPRC results computed though \code{AUPRC.single.over.classes} (\code{\link{AUPRC}});
	\item AUROC results computed through \code{AUROC.single.over.classes} (\code{\link{AUROC}}); 
		\item PXR results computed though \code{PXR.at.multiple.recall.levels.over.classes} (\code{\link{PXR}});
		\item FMM results computed though \code{compute.Fmeasure.multilabel} (\code{\link{FMM}}); 
}}
It is stored in the \code{perf.dir} directory.
}
\description{
High level function to compute the hierarchical heuristic methods MAX, AND, OR (Heuristic Methods MAX, AND, OR (\cite{Obozinski et al., 
Genome Biology, 2008}) applying a classical holdout procedure
}
\details{
The function check if the number of classes between the flat scores matrix and the annotations matrix mismatched
(e.g. some terms might be removed from the flat scores matrix before applying an hierarchy-unaware algorithm). 
If so, the number of classes of the annotations matrix is narrowed to the number of terms of the flat scores matrix and
the corresponding subgraph is computed as well.
}
\examples{
data(graph);
data(scores);
data(labels);
data(test.index);
if (!dir.exists("data")){
	dir.create("data");
}
if (!dir.exists("results")){
	dir.create("results");
}
save(g,file="data/graph.rda");
save(L,file="data/labels.rda");
save(S,file="data/scores.rda");
save(test.index, file="data/test.index.rda");
ind.dir <- dag.dir <- flat.dir <- ann.dir <- "data/";
hierScore.dir <- perf.dir <- "results/";
rec.levels <- seq(from=0.1, to=1, by=0.1);
ind.test.set <- "test.index";
dag.file <- "graph";
flat.file <- "scores";
ann.file <- "labels";
Do.heuristic.methods.holdout(heuristic.fun="MAX", norm=FALSE, norm.type="MaxNorm", 
folds=NULL, seed=23, n.round=3, f.criterion ="F", rec.levels=rec.levels,
flat.file=flat.file, ann.file=ann.file, dag.file=dag.file, 
ind.test.set=ind.test.set, ind.dir=ind.dir, flat.dir=flat.dir, ann.dir=ann.dir, 
dag.dir=dag.dir, hierScore.dir=hierScore.dir, perf.dir=perf.dir);
}
