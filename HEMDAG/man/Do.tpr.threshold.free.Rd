% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HEMDAG.1.0.0.R
\name{Do.tpr.threshold.free}
\alias{Do.tpr.threshold.free}
\title{TPR-DAG vanilla}
\usage{
Do.tpr.threshold.free(norm = TRUE, norm.type = "NONE",
  flat.file = flat.file, ann.file = ann.file, dag.file = dag.file,
  flat.dir = flat.dir, ann.dir = ann.dir, dag.dir = dag.dir,
  flat.norm.dir = NULL, n.round = 3, f.criterion = "F",
  hierScore.dir = hierScore.dir, perf.dir = perf.dir)
}
\arguments{
\item{norm}{boolean value: 
\itemize{
\item \code{TRUE} (def.): the flat scores matrix has been already normalized in according to a normalization method;    
\item \code{FALSE}: the flat scores matrix has not been normalized yet. See the parameter \code{norm.type} for which normalization can be applied.
}}

\item{norm.type}{three values: 
\enumerate{
\item \code{NONE} (def.): set \code{norm.type} to \code{NONE} if and only if the parameter \code{norm} is set to \code{TRUE};
\item \code{MaxNorm}: each score is divided w.r.t. the max of each class;
\item \code{Qnorm}: quantile normalization. \pkg{preprocessCore} package is used. 
}}

\item{flat.file}{name of the file containing the flat scores matrix to be normalized or already normalized (without rda extension)}

\item{ann.file}{name of the file containing the the label matrix of the examples (without rda extension)}

\item{dag.file}{name of the file containing the graph that represents the hierarchy of the classes (without rda extension)}

\item{flat.dir}{relative path where flat scores matrix is stored}

\item{ann.dir}{relative path where annotation matrix is stored}

\item{dag.dir}{relative path where graph is stored}

\item{flat.norm.dir}{relative path where flat normalized scores matrix must be strored. Use this parameter if and only if \code{norm} is
set to \code{FALSE}, otherwise set \code{flat.norm.dir} to \code{NULL} (def.)}

\item{n.round}{number of rounding digits to be applied to the hierarchical scores matrix (\code{def. 3}). It is used for choosing 
the best threshold on the basis of the best F-measure}

\item{f.criterion}{character. Type of F-measure to be used to select the best F-measure. Two possibilities:
\enumerate{
\item \code{F} (def.): corresponds to the harmonic mean between the average precision and recall
\item \code{avF}: corresponds to the per-example \code{F-score} averaged across all the examples
}}

\item{hierScore.dir}{relative path where the hierarchical scores matrix must be stored}

\item{perf.dir}{relative path where the term-centric and protein-centric measures must be stored}
}
\value{
Five \code{rda} files stored in the rispective output directories:
\enumerate{
\item \code{hierarchical scores matrix}: a matrix with examples on rows and classes on columns representing the computed hierarchical scores 
for each class and example considered. It stored in \code{hierScore.dir} directory.
\item \code{PCM} (Protein Centric Measures) average and per-example: compute \code{F-score} measure by \code{find.best.f} function. 
It stored in \code{perf.dir} directory.
\item \code{PRC} (area under Precision-Recall Curve) average and per.class: compute \code{PRC} by \pkg{precrec} package. 
It stored in \code{perf.dir} directory.
\item \code{AUC} (Area Under ROC Curve) average and per-class: compute \code{AUC} by \pkg{precrec} package. 
It stored in \code{perf.dir} directory.
\item \code{PxR} (Precision at fixed Recall levels) average and per classes: compute \code{PxR}  by \pkg{PerfMeas} package. 
It stored in \code{perf.dir} directory.
}
}
\description{
High level function to compute hierarchical correction according to TPR-DAG vanilla algorithm
}
\examples{
data(graph);
data(scores);
data(labels);
if (!dir.exists("data")){
	dir.create("data");
}
if (!dir.exists("results")){
	dir.create("results");
}
save(g,file="data/graph.rda");
save(L,file="data/labels.rda");
save(S,file="data/scores.rda");
dag.dir <- flat.dir <- flat.norm.dir <- ann.dir <- "data/";
hierScore.dir <- perf.dir <- "results/";
dag.file <- "graph";
flat.file <- "scores";
ann.file <- "labels";
Do.tpr.threshold.free(norm=FALSE, norm.type= "MaxNorm", flat.file=flat.file, 
ann.file=ann.file, dag.file=dag.file, flat.dir=flat.dir, ann.dir=ann.dir, 
dag.dir=dag.dir, flat.norm.dir=flat.norm.dir, n.round=3, f.criterion ="F", 
hierScore.dir=hierScore.dir, perf.dir=perf.dir);
}
